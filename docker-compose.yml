# Docker Compose file for Traefik and OpenWebUI
# Version: 1.0
# Author: Michael GÃ¼rtl-Dusleag
# Description: Sets up Traefik as a reverse proxy with Let's Encrypt
#              and OpenWebUI service.

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    environment:
      - TZ=Europe/Vienna
    command:
      - --api.dashboard=true
      - --api.insecure=true

      - --log.level=INFO
      - --accesslog=true
      - --accesslog.fields.names.StartUTC=drop

      - --providers.docker.network=traefik-network
      - --providers.docker.exposedByDefault=false # Good security practice
      - --providers.docker.watch=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock

      # --- Entrypoints ---
      # HTTP Entrypoint
      - --entrypoints.web.address=:80

      # HTTPS Entrypoint
      - --entrypoints.websecure.address=:443

      - --entrypoints.websecure.http.tls.certresolver=letsencrypt
      - --certificatesresolvers.letsencrypt.acme.email=admin@jesterbox.org
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json

      # Global HTTP to HTTPS redirection
      #- --entrypoints.web.http.redirections.entrypoint.to=websecure
      #- --entrypoints.web.http.redirections.entrypoint.scheme=https

      # -- Set internal networks to trusted ips --
      - --entrypoints.web.forwardedHeaders.trustedIPs=192.168.165.1
      - --entrypoints.websecure.forwardedHeaders.trustedIPs=192.168.165.1

    read_only: true

    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - traefik-network

    #- -- Recommended security setting for traefik --

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    environment:
      - OLLAMA_API_BASE_URL=http://host.docker.internal:11434
      #- OLLAMA_API_BASE_URL=http://192.168.83.5:11434
      - TZ=Europe/Vienna
    volumes:
      - openwebui-data:/app/backend/data
    labels:
      - "traefik.enable=true" # Enable Traefik for this service

      # --- Service Definition for OpenWebUI ---
      - "traefik.http.services.openwebui-svc.loadbalancer.server.port=8080"

      # Redirect middleware definition
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # --- HTTP Router (for llm.gdsolutions.at) with redirect---
      # This router will match HTTP requests and then be redirected to HTTPS
      # by Traefik's global entrypoint redirection.
      - "traefik.http.routers.openwebui-http.rule=Host(`llm.gdsolutions.at`)"
      - "traefik.http.routers.openwebui-http.entrypoints=web"
      - "traefik.http.routers.openwebui-http.middlewares=redirect-to-https"
      - "traefik.http.routers.openwebui-http.service=openwebui-svc"

      # --- HTTP Router for internal address(for mac-mini.jesterbox.lan) ---
      - "traefik.http.routers.openwebui-internal.rule=Host(`mac-mini.jesterbox.lan`)"
      - "traefik.http.routers.openwebui-internal.entrypoints=web"
      - "traefik.http.routers.openwebui-internal.service=openwebui-svc" # Link to the backend service

      # --- HTTPS Router (for llm.gdsolutions.at) ---
      - "traefik.http.routers.openwebui-https.rule=Host(`llm.gdsolutions.at`)"
      - "traefik.http.routers.openwebui-https.entrypoints=websecure"
      - "traefik.http.routers.openwebui-https.tls.certresolver=letsencrypt" # Use Let's Encrypt
      - "traefik.http.routers.openwebui-https.service=openwebui-svc" # Link to the backend service


    restart: unless-stopped
    depends_on:
      - traefik
    networks:
      - traefik-network

    # --- on MacOS X with silicone Chips this works with CPU only, use native ollama ---
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    profiles:
      - donotstart
    volumes:
      - ollama-data:/root/.ollama
    restart: unless-stopped
    networks:
      - traefik-network

# Define the external network (must be created manually: docker network create traefik-network)
networks:
  traefik-network:
    external: true

# Define the volume for OpenWebUI data
volumes:
  openwebui-data:
    driver: local

